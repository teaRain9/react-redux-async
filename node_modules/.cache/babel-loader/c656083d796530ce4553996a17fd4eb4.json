{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => {\n        return item.id === newItem.id;\n      });\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemsFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      title: 'Sending',\n      message: 'Sending Cart Data ...',\n      status: 'pending'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://flamelinktest-b9226-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        title: 'success',\n        message: 'Sent Cart Data Successfully',\n        status: 'success'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        title: 'Error',\n        message: 'Sending Cart Data Error',\n        status: 'error'\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","title","price","quantity","totalPrice","removeItemsFromCart","filter","sendCartData","cart","dispatch","showNotification","message","status","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["C:/Users/ah1004_sa/Personal/react-redux-async/src/store/cart-slice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {uiActions} from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n    },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => {return item.id === newItem.id})\r\n            state.totalQuantity++\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    title: newItem.title,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n\r\n            }\r\n        },\r\n        removeItemsFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id ===id);\r\n            state.totalQuantity--;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            } else {\r\n                existingItem.quantity --;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\n\r\nconst sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            title: 'Sending',\r\n            message: 'Sending Cart Data ...',\r\n            status: 'pending'\r\n        }))\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://flamelinktest-b9226-default-rtdb.firebaseio.com/cart.json',\r\n                {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify(cart)\r\n                });\r\n            if (!response.ok) {\r\n                throw new Error('Sending cart data failed.')\r\n            }\r\n        }\r\n\r\n        try {\r\n            await sendRequest()\r\n\r\n            dispatch(uiActions.showNotification({\r\n                title: 'success',\r\n                message: 'Sent Cart Data Successfully',\r\n                status: 'success'\r\n            }))\r\n\r\n        } catch(error) {\r\n            dispatch(uiActions.showNotification({\r\n                title: 'Error',\r\n                message: 'Sending Cart Data Error',\r\n                status: 'error'\r\n            }))\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module"}